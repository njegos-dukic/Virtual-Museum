/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-01-11 21:55:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.unibl.etf.virtualmuseum.entities.TourEntity;
import org.unibl.etf.virtualmuseum.services.TourService;
import org.unibl.etf.virtualmuseum.entities.MuseumEntity;
import org.unibl.etf.virtualmuseum.services.MuseumService;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.sql.Timestamp;
import java.util.List;
import java.io.File;
import java.util.HashMap;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.io.FilenameUtils;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.io.FileUtils;
import java.io.InputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;

public final class AddTour_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.unibl.etf.virtualmuseum.entities.MuseumEntity");
    _jspx_imports_classes.add("org.unibl.etf.virtualmuseum.services.TourService");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("org.apache.commons.fileupload.servlet.ServletFileUpload");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileItem");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.io.FileOutputStream");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("org.apache.commons.io.FileUtils");
    _jspx_imports_classes.add("org.unibl.etf.virtualmuseum.services.MuseumService");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.apache.commons.fileupload.disk.DiskFileItemFactory");
    _jspx_imports_classes.add("org.apache.commons.fileupload.FileUploadException");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("org.apache.commons.io.FilenameUtils");
    _jspx_imports_classes.add("org.unibl.etf.virtualmuseum.entities.TourEntity");
    _jspx_imports_classes.add("java.io.InputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.unibl.etf.virtualmuseum.beans.UserBean user = null;
      synchronized (session) {
        user = (org.unibl.etf.virtualmuseum.beans.UserBean) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (user == null){
          user = new org.unibl.etf.virtualmuseum.beans.UserBean();
          _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("  \r\n");
      out.write(" \r\n");

	if (!user.isLoggedIn()) {
		response.sendRedirect("Login.jsp");
	}
	
	else if (request.getParameter("logout") != null) {
		user.logOut();
		session.invalidate();
		response.sendRedirect("Login.jsp");
	}
	
	else {
		/* 
	    String mid = request.getParameter("museum");
		String tname = request.getParameter("name");
		String startDate = request.getParameter("date");
		String startTime = request.getParameter("time");
		String duration = request.getParameter("duration");
	
		
		// image-artifacts
		// video-artifacts
		// yt-video-artifacts
		TourEntity te = null;
	    if(mid != null && tname != null && startDate != null && startTime != null && duration != null) {
	    	te = new TourEntity(Integer.parseInt(mid), tname, Timestamp.valueOf(startDate + " " + startTime), duration);
	    	TourService.insert(te);
	    	response.sendRedirect("Tours.jsp");
	    } */
	    try {
	    	int tourId = -1;
	        List<FileItem> items = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request);
	        HashMap<String, InputStream> inputStreams = new HashMap<String, InputStream>();
	        TourEntity te = new TourEntity();
	        String dateString = "";
	        String timeString = "";
	        for (FileItem item : items) {
	            if (item.isFormField()) {
	                String fieldName = item.getFieldName();
	                String fieldValue = item.getString();
	                System.out.println(fieldName + " -> " + fieldValue);
	                if ("museum".equals(fieldName))
	                	te.setMuseumId(Integer.parseInt(fieldValue));
	                else if ("name".equals(fieldName))
	                	te.setName(fieldValue);
	                else if ("date".equals(fieldName))
	                	dateString = fieldValue;
	                else if ("time".equals(fieldName))
	                	timeString = fieldValue;
	                else if ("duration".equals(fieldName))
	                	te.setDuration(Double.parseDouble(fieldValue));
	                // ... (do your job here)
	            } else {
	                String fieldName = item.getFieldName();
	                String fileName = FilenameUtils.getName(item.getName());
	                InputStream fileContent = item.getInputStream();
	                inputStreams.put(fileName, fileContent);
	                // ... (do your job here)
	            }
	        }
	        
	        te.setStartDateTime(Timestamp.valueOf(dateString + " " + timeString + ":00"));
	        TourService.insert(te);
	        
	        for (HashMap.Entry<String, InputStream> entry : inputStreams.entrySet()) {	        	
	        	try {
					InputStream inputStream = entry.getValue();
					File folder = new File("C:\\Users\\njego\\Desktop\\IP\\projektni-zadatak-2022\\VirtualMuseumAdmin\\WebContent\\WEB-INF\\artifacts\\" + te.getId());
					FileUtils.deleteDirectory(folder);
					folder.mkdir();
	                File file = new File("C:\\Users\\njego\\Desktop\\IP\\projektni-zadatak-2022\\VirtualMuseumAdmin\\WebContent\\WEB-INF\\artifacts\\" + te.getId() + "\\" + entry.getKey());
	                FileOutputStream outputStream = new FileOutputStream(file, false);
	                int read;
	    	        byte[] bytes = new byte[1024 * 1024 * 1024];
	    	        while ((read = inputStream.read(bytes)) != -1) {
	    	            outputStream.write(bytes, 0, read);
	    	        }
	    	        outputStream.close();

	            } catch (Exception e) {
	            	System.out.println("INVALID WRITE!");
	            }
	        }
	        
	    } catch (FileUploadException e) {
	        System.out.println("CANNOT PARSSE MULTIPART");
	    }
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("	<head>\r\n");
      out.write("    	<meta charset=\"UTF-8\">\r\n");
      out.write("    	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    	<title>Virtual Museum Admin</title>\r\n");
      out.write("    	<link href=\"../css/Header.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    	<link href=\"../css/AddEdit.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    	<link rel=\"icon\" href=\"../images/logo.png\">\r\n");
      out.write("    	<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    	<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n");
      out.write("    	<link href=\"https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap\" rel=\"stylesheet\"> 				\r\n");
      out.write("	\r\n");
      out.write("		<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("		<script>\r\n");
      out.write("		 		$(document).ready(function () {\r\n");
      out.write("		 			$(\"#remove-selected-images\").click(function () {\r\n");
      out.write("		 				$(\"#file-uploader\").val([]);\r\n");
      out.write("		 			})\r\n");
      out.write("		 			\r\n");
      out.write("		 			$(\"#remove-selected-video\").click(function () {\r\n");
      out.write("		 				$(\"#video-uploader\").val([]);\r\n");
      out.write("		 			})\r\n");
      out.write("		 		});\r\n");
      out.write("		 		\r\n");
      out.write("				function beforeSubmit() {\r\n");
      out.write("					var uploader = document.getElementById(\"file-uploader\");\r\n");
      out.write("					if (uploader.files.length < 5) {\r\n");
      out.write("						alert(\"Upload at least 5 images!\");\r\n");
      out.write("						return false;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					if (uploader.files.length > 10) {\r\n");
      out.write("						alert(\"Upload no more than 10 images!\");\r\n");
      out.write("						return false;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					var videoUploader = document.getElementById(\"video-uploader\");\r\n");
      out.write("					var ytVideoUploader = document.getElementById(\"yt-video-uploader\");\r\n");
      out.write("					\r\n");
      out.write("					if (videoUploader.files.length == 0 && ytVideoUploader.value == \"\") {\r\n");
      out.write("						alert(\"Attach artifact video or YouTube link!\")\r\n");
      out.write("						return false;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					if (videoUploader.files.length != 0 && ytVideoUploader.value != \"\") {\r\n");
      out.write("						alert(\"Submit only local video or YouTube link, not both!\")\r\n");
      out.write("						return false;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				    return true;\r\n");
      out.write("				}\r\n");
      out.write("		</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("		<div class=\"header-container\">\r\n");
      out.write("           <div class=\"header-logo-container\">\r\n");
      out.write("				<a class=\"header-logo-container\" href=\"Homepage.jsp\">\r\n");
      out.write("			    	<img class=\"header-logo\" src=\"../images/logo.png\" />\r\n");
      out.write("			    </a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"header-title\">\r\n");
      out.write("                VIRTUAL MUSEUM ADMINISTRATION\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"header-login-container\">\r\n");
      out.write("				<form class=\"header-login-container\" action=\"#\" method=\"post\">\r\n");
      out.write("	                <div class=\"header-login-label\">\r\n");
      out.write("	                    ");
      out.print( user.getUsername() );
      out.write(" \r\n");
      out.write("	                </div>\r\n");
      out.write("	                <input type=\"hidden\" name=\"logout\" value=\"1\" />\r\n");
      out.write("		            <input type=\"image\" class=\"header-login-image\" src=\"../images/login.png\" />\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"museum-edit-container\">\r\n");
      out.write("	        <form id=\"add-tour\" action=\"#\" method=\"post\" class=\"museum-edit-form\" enctype=\"multipart/form-data\">\r\n");
      out.write("	        	<div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"museum\">Museum: </label>\r\n");
      out.write("	                <select id=\"museum-select\" class=\"museum-edit-input-field\" name=\"museum\" required>\r\n");
      out.write("		                ");
 for(MuseumEntity me : MuseumService.selectAll()) { 
      out.write("\r\n");
      out.write("		                	<option value=\"");
      out.print( me.getId() );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( me.getName() );
      out.write(" </option>\r\n");
      out.write("		                ");
 } 
      out.write("\r\n");
      out.write("	                </select>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"name\">Tour name: </label>\r\n");
      out.write("	                <input class=\"museum-edit-input-field\" name=\"name\" type=\"text\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"date\">Tour date: </label>\r\n");
      out.write("	                <input class=\"museum-edit-input-field\" name=\"date\" type=\"date\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"time\">Start time: </label>\r\n");
      out.write("	                <input class=\"museum-edit-input-field\" name=\"time\" type=\"time\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"duration\">Duration (H): </label>\r\n");
      out.write("	                <input class=\"museum-edit-input-field\" name=\"duration\" type=\"number\" step=\".5\" required>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"image-artifacts\">Image artifacts: </label>\r\n");
      out.write("	                <input id=\"file-uploader\" class=\"museum-edit-input-field\" name=\"image-artifacts\" type=\"file\" required accept=\"image/*\" multiple>\r\n");
      out.write("	            	<img id=\"remove-selected-images\" class=\"museum-edit-input-label\" style=\"height: min(calc(8px + 1.2vw), 16px); width: min(calc(8px + 1.2vw), 16px);\" src=\"../images/cancel.png\"/>\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"video-artifact\">Video artifact: </label>\r\n");
      out.write("	                <input id=\"video-uploader\" class=\"museum-edit-input-field\" name=\"video-artifacts\" type=\"file\" accept=\"video/*\">\r\n");
      out.write("	            	<img id=\"remove-selected-video\" class=\"museum-edit-input-label\" style=\"height: min(calc(8px + 1.2vw), 16px); width:  min(calc(8px + 1.2vw), 16px);\" src=\"../images/cancel.png\"/>\r\n");
      out.write("	            </div>\r\n");
      out.write("	             <div class=\"museum-edit-single-input\">\r\n");
      out.write("	                <label class=\"museum-edit-input-label\" for=\"yt-video-artifact\">YouTube video artifact: </label>\r\n");
      out.write("	                <input id=\"yt-video-uploader\" class=\"museum-edit-input-field\" name=\"yt-video-artifacts\" type=\"text\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	            <div class=\"museum-edit-single-input margin-botton-4perc\">\r\n");
      out.write("	                <input class=\"museum-edit-input-field\" type=\"submit\" onclick=\"return beforeSubmit()\" value=\"Add Tour\">\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </form>\r\n");
      out.write("	    </div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
